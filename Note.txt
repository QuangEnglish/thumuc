

Scaffold-DbContext “Data Source=LAPTOP-VBLUUCQJ\SQLEXPRESS;Initial Catalog=QLBanHang;Integrated Security=True” Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models


//=========================================================================================
    <Window.Resources>
        <Style TargetType="TextBox" >
            <Setter Property="Foreground" Value="Blue"></Setter>
            <Setter Property="FontFamily" Value="Time new roman"></Setter>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="Button">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="100"></Setter>
                </Style>
            </Style.Resources>
            <Setter Property="Background" Value="YellowGreen"></Setter>
        </Style>
    </Window.Resources>
        <Grid>
            <Label Content="Quản lý bán hàng" HorizontalAlignment="Left" Margin="289,22,0,0" VerticalAlignment="Top" FontWeight="Bold" FontSize="20"/>
            <Label Content="Mã sản phẩm" HorizontalAlignment="Left" Margin="90,100,0,0" VerticalAlignment="Top" Width="120" />
            <Label Content="Tên sản phẩm" HorizontalAlignment="Left" Margin="90,150,0,0" VerticalAlignment="Top" Width="120" />
            <Label Content="Loại sản phẩm" HorizontalAlignment="Left" Margin="90,200,0,0" VerticalAlignment="Top" Width="120" />
            <Label Content="Đơn giá" HorizontalAlignment="Left" Margin="90,250,0,0" VerticalAlignment="Top" Width="120" />
            <Label Content="Số lượng" HorizontalAlignment="Left" Margin="90,300,0,0" VerticalAlignment="Top" Width="120" />
            <TextBox x:Name="txtMaSanPham" HorizontalAlignment="Left" Margin="285,100,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="365" Height="30"/>
            <TextBox x:Name="txtTenSanPham" HorizontalAlignment="Left" Margin="285,150,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="365" Height="30"/>
            <ComboBox Name="cboLoaiSanPham" HorizontalAlignment="Left" Margin="285,200,0,0" VerticalAlignment="Top" Width="365" Height="30"/>
            <TextBox x:Name="txtDonGia" HorizontalAlignment="Left" Margin="285,250,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="365" Height="30"/>
            <TextBox x:Name="txtSoLuong" HorizontalAlignment="Left" Margin="285,300,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="365" Height="30"/>
            <DataGrid x:Name="dgvSanPham" AutoGenerateColumns="False" CanUserAddRows="False" Margin="20,354,20,120" >
                <DataGrid.Columns>
                    <DataGridTextColumn Width="*" Header="Mã SP" Binding="{Binding MaSp, Mode=OneWay}"></DataGridTextColumn>
                    <DataGridTextColumn Width="*" Header="Tên SP" Binding="{Binding TenSp, Mode=OneWay}"></DataGridTextColumn>
                    <DataGridTextColumn Width="*" Header="Mã loại SP" Binding="{Binding MaLoai, Mode=OneWay}"></DataGridTextColumn>
                    <DataGridTextColumn Width="*" Header="Số lượng" Binding="{Binding SoLuong, Mode=OneWay}"></DataGridTextColumn>
                    <DataGridTextColumn Width="*" Header="Đơn giá" Binding="{Binding DonGia, Mode=OneWay}"></DataGridTextColumn>
                    <DataGridTextColumn Width="*" Header="Thành tiền" Binding="{Binding ThanhTien, Mode=OneWay, StringFormat='\{0:n0\}'}"></DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Button x:Name="btnThem"  Content="Thêm" HorizontalAlignment="Left" Margin="96,543,0,0" VerticalAlignment="Top" Width="105" Height="40" />
            <Button x:Name="btnSua" Content="Sửa" HorizontalAlignment="Left" Margin="216,543,0,0" VerticalAlignment="Top" Width="105" Height="40"/>
            <Button x:Name="btnXoa" Content="Xóa" HorizontalAlignment="Left" Margin="336,543,0,0" VerticalAlignment="Top" Width="105" Height="40" />
            <Button x:Name="btnTim" Content="Tìm" HorizontalAlignment="Left" Margin="456,543,0,0" VerticalAlignment="Top" Width="105" Height="40" />
            <Button x:Name="btnThongKe" Content="Thống kê" HorizontalAlignment="Left" Margin="576,543,0,0" VerticalAlignment="Top" Width="105" Height="40" />

        </Grid>
//================================================================================================
    <Grid>
        <DataGrid Height="100" x:Name="dgvThongKe" AutoGenerateColumns="False" CanUserAddRows="False" Margin="20,74,20,260">
            <DataGrid.Columns>
                <DataGridTextColumn Width="*" Header="Mã loại" Binding="{Binding MaLoai, Mode=OneWay}"></DataGridTextColumn>
                <DataGridTextColumn Width="*" Header="Tên loại" Binding="{Binding TenLoai, Mode=OneWay}"></DataGridTextColumn>
                <DataGridTextColumn Width="*" Header="Tổng tiền" Binding="{Binding TongTien, Mode=OneWay, StringFormat='\{0:n0\}'}"></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
//=====================================================================================================
        QLBanHangContext db = new QLBanHangContext();
        public MainWindow()
        {
            InitializeComponent();
        }
        private void Clear()
        {
            txtMaSanPham.Text = "";
            txtTenSanPham.Text = "";
            txtDonGia.Text = "";
            txtSoLuong.Text = "";
            cboLoaiSanPham.SelectedIndex = 0;
        }
        private void HienThiCB()
        {
            var query = from l in db.LoaiSanPhams
                        select l;
            cboLoaiSanPham.ItemsSource = query.ToList();
            cboLoaiSanPham.DisplayMemberPath = "TenLoai";
            cboLoaiSanPham.SelectedValuePath = "MaLoai";
            cboLoaiSanPham.SelectedIndex = 0;
        }
        private void HienThiDL()
        {
            var query = from sp in db.SanPhams
                        orderby sp.MaSp
                        select new
                        {
                            sp.MaSp,
                            sp.TenSp,
                            sp.MaLoai,
                            sp.DonGia,
                            sp.SoLuong,
                            ThanhTien = sp.SoLuong * sp.DonGia
                        };
            dgvSanPham.ItemsSource = query.ToList();

            
        }
        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            HienThiCB();
            HienThiDL();
        }
        private bool CheckDL()
        {
            string tb = "";
            if (txtMaSanPham.Text == "" || txtTenSanPham.Text == ""|| txtDonGia.Text==""|| txtSoLuong.Text == "")
            {
                tb += "\n Ban can nhap day du du lieu";
            }
            int sl;
            if(!int.TryParse(txtSoLuong.Text, out sl) || int.Parse(txtSoLuong.Text)<0)
            {
                tb += "\n Ban can nhap so luong dang so lon hon 0";
            }
            double dg;
            if (!double.TryParse(txtDonGia.Text, out dg) || int.Parse(txtDonGia.Text) < 0)
            {
                tb += "\n Ban can nhap don gia dang so lon hon 0";
            }
            if(tb != "")
            {
                MessageBox.Show(tb, "Thong bao", MessageBoxButton.OK, MessageBoxImage.Error);
                return false;
            }
            return true;
        }
        private void btnThem_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                if(CheckDL())
                {
                    var query = db.SanPhams.SingleOrDefault(sp => sp.MaSp.Equals(int.Parse(txtMaSanPham.Text)));
                    if (query != null)
                    {
                        MessageBox.Show("Đã tồn tại mã sản phẩm này", "Thông báo", MessageBoxButton.OK, MessageBoxImage.Error);
                    }
                    else
                    {
                        SanPham sp = new SanPham();
                        sp.MaSp = int.Parse(txtMaSanPham.Text);
                        sp.TenSp = txtTenSanPham.Text;
                        sp.DonGia = double.Parse(txtDonGia.Text);
                        sp.SoLuong = int.Parse(txtSoLuong.Text);
                        LoaiSanPham lsp = (LoaiSanPham)cboLoaiSanPham.SelectedItem;
                        sp.MaLoai = lsp.MaLoai;
                        db.SanPhams.Add(sp);
                        db.SaveChanges();
                        MessageBox.Show("Thêm thành công!");
                        Clear();
                        HienThiDL();
                    }
                }
            }catch(Exception ex) {
                MessageBox.Show("Co loi" + ex.Message);
            }
        }

        private void btnSua_Click(object sender, RoutedEventArgs e)
        {
            if (txtMaSanPham.Text == "")
            {
                MessageBox.Show("Yêu cầu nhập mã sản phẩm", "Thông báo", MessageBoxButton.OK, MessageBoxImage.Error);

            }
            else
            {
                var query = db.SanPhams.SingleOrDefault(sp => sp.MaSp.Equals(int.Parse(txtMaSanPham.Text)));
                if(query != null)
                {
                    query.MaSp = int.Parse(txtMaSanPham.Text);
                    query.TenSp = txtTenSanPham.Text;
                    query.DonGia = double.Parse(txtDonGia.Text);
                    query.SoLuong = int.Parse(txtSoLuong.Text);
                    LoaiSanPham l = (LoaiSanPham)cboLoaiSanPham.SelectedItem;
                    query.MaLoai = l.MaLoai;
                    db.SaveChanges();
                    MessageBox.Show("Sửa thành công!");
                    Clear();
                    HienThiDL();
                }
                else
                {
                    MessageBox.Show("Mã sản phẩm không tồn tại", "Thông báo", MessageBoxButton.OK, MessageBoxImage.Error);

                }
            }
        }

        private void btnXoa_Click(object sender, RoutedEventArgs e)
        {
            if (txtMaSanPham.Text == "")
            {
                MessageBox.Show("Yêu cầu nhập mã sản phẩm", "Thông báo", MessageBoxButton.OK, MessageBoxImage.Error);

            }
            else
            {
                var query = db.SanPhams.SingleOrDefault(sp => sp.MaSp.Equals(int.Parse(txtMaSanPham.Text)));
                if(query == null)
                {
                    MessageBox.Show("Không tồn tại sản phẩm này", "Thông báo", MessageBoxButton.OK, MessageBoxImage.Error);
                }
                else
                {
                    db.SanPhams.Remove(query);
                    db.SaveChanges();
                    MessageBox.Show("Xóa thành công!");
                    Clear();
                    HienThiDL() ;
                }
            }
        }

        private void btnTim_Click(object sender, RoutedEventArgs e)
        {
            if (cboLoaiSanPham.SelectedIndex >= 0)
            {
                try
                {
                    LoaiSanPham loai = (LoaiSanPham)cboLoaiSanPham.SelectedItem;
                    var query = from sp in db.SanPhams
                                orderby sp.MaLoai
                                where sp.MaLoai == loai.MaLoai
                                select new
                                {
                                    sp.MaSp,
                                    sp.TenSp,
                                    sp.DonGia,
                                    sp.MaLoai,
                                    sp.SoLuong,
                                    ThanhTien = sp.SoLuong * sp.DonGia
                /*                    ThanhTien = (sp.SoLuong >= 3) ? 300000 : (sp.SoLuong > 1 && sp.SoLuong < 3) ? 150000 : 0*/
                                };
                    dgvSanPham.ItemsSource = null;
                    dgvSanPham.ItemsSource = query.ToList();
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Co loi:" + ex.Message, "Thong baao");
                }
            }
        }

        private void btnThongKe_Click(object sender, RoutedEventArgs e)
        {
            Window1 w1 = new Window1();
            w1.Show();
        }

        private void dgvCongNhan_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            var item = dgvSanPham.SelectedItem;
            if(item != null)
            {
                txtMaSanPham.Text = (dgvSanPham.SelectedCells[0].Column.GetCellContent(item) as TextBlock).Text;
                txtTenSanPham.Text = (dgvSanPham.SelectedCells[1].Column.GetCellContent(item) as TextBlock).Text;
                cboLoaiSanPham.SelectedValue = (dgvSanPham.SelectedCells[2].Column.GetCellContent(item) as TextBlock).Text;
                txtSoLuong.Text = (dgvSanPham.SelectedCells[3].Column.GetCellContent(item) as TextBlock).Text;
                txtDonGia.Text = (dgvSanPham.SelectedCells[4].Column.GetCellContent(item) as TextBlock).Text;

            }
        }
//=================================================================================================================
//thong ke tong nhom hang
        private void HienThi()
        {
            var query = from sp in db.SanPhams
                        group sp by sp.MaLoai into TrungGian
                        select new
                        {
                            MaLoai = TrungGian.Key,
                            TongTien = TrungGian.Sum(sp => sp.DonGia * sp.SoLuong)
                        };
            var query2 = from q in query
                         join l in db.LoaiSanPhams
                         on q.MaLoai equals l.MaLoai
                         select new
                         {
                             l.MaLoai,
                             l.TenLoai,
                             q.TongTien
                         };
            dgvThongKe.ItemsSource = query2.ToList();
        }